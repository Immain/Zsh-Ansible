- hosts: localhost
  tasks:
    - name: Install Zsh
      homebrew:
        name: zsh
        state: present

    - name: Install Oh My Zsh
      shell: |
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      args:
        creates: ~/.oh-my-zsh

    - name: Set Zsh as default shell
      shell: |
        chsh -s $(which zsh)
      args: {}

    - name: Install fontconfig
      homebrew:
        name: fontconfig
        state: present
      register: fontconfig_installer

    - name: Download Ubuntu Mono font
      get_url:
        url: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/UbuntuMono.zip
        dest: /tmp/UbuntuMono.zip

    - name: Unzip Ubuntu Mono font
      unarchive:
        src: /tmp/UbuntuMono.zip
        dest: ~/Library/Fonts
        remote_src: yes

    - name: Update font cache
      command: brew tap homebrew/cask-fonts && brew install --cask font-ubuntu-mono

    - name: Install Starship
      shell: |
        curl -sS https://starship.rs/install.sh --yes | sh
      args:
        creates: ~/.cargo/bin/starship

    - name: Ensure config directory exists
      file:
        path: ~/.config
        state: directory

    - name: Configure Starship
      copy:
        dest: ~/.config/starship.toml
        content: |
          # Starship configuration
          format = """
          [╭─user───❯](bold blue) $username
          [┣─system─❯](bold yellow) $hostname
          [┣─project❯](bold red) $directory$rust$git_branch$git_status$package$golang$terraform$docker_context$python$docker_context$nodejs
          [╰─cmd────❯](bold green) 
          """
          
          [username]
          style_user = "green bold"
          style_root = "red bold"
          format = "[$user]($style) "
          disabled = false
          show_always = true

          [hostname]
          ssh_only = false
          format = 'on [$hostname](bold yellow) '
          trim_at = "."
          disabled = false

          [character]
          success_symbol = "[➜](bold green)"
          error_symbol = "[✗](bold red)"

          [directory]
          read_only = " "
          truncation_length = 10
          truncate_to_repo = true
          style = "bold italic blue"

          [cmd_duration]
          min_time = 4
          show_milliseconds = false
          disabled = false
          style = "bold italic red"

          [aws]
          symbol = "  "

          [conda]
          symbol = " "

          [dart]
          symbol = " "

          [docker_context]
          symbol = " "
          format = "via [$symbol$context]($style) "
          style = "blue bold"
          only_with_files = true
          detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
          detect_folders = []
          disabled = false

          [elixir]
          symbol = " "

          [elm]
          symbol = " "

          [git_branch]
          symbol = " "

          [golang]
          symbol = " "

          [hg_branch]
          symbol = " "

          [java]
          symbol = " "

          [julia]
          symbol = " "

          [memory_usage]
          symbol = "󰍛 "

          [nim]
          symbol = " "

          [nix_shell]
          symbol = " "

          [package]
          symbol = "󰏗 "

          [perl]
          symbol = " "

          [php]
          symbol = " "

          [python]
          symbol = " "
          format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
          style = "bold yellow"
          pyenv_prefix = "venv "
          python_binary = ["./venv/bin/python", "python", "python3", "python2"]
          detect_extensions = ["py"]
          version_format = "v${raw}"

          [ruby]
          symbol = " "

          [rust]
          symbol = " "

          [scala]
          symbol = " "

          [shlvl]
          symbol = " "

          [swift]
          symbol = "ﯣ "

          [nodejs]
          format = "via [ Node.js $version](bold green) "
          detect_files = ["package.json", ".node-version"]
          detect_folders = ["node_modules"]

    - name: Update .zshrc to source Starship
      lineinfile:
        path: ~/.zshrc
        line: |
          export PATH="$HOME/.cargo/bin:$PATH"
          eval "$(starship init zsh)"
        create: yes

